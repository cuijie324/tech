<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[崔杰的博客]]></title>
  <subtitle><![CDATA[学习 记录 分享]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://tech.cuijie.me/"/>
  <updated>2016-01-18T15:39:42.599Z</updated>
  <id>http://tech.cuijie.me/</id>
  
  <author>
    <name><![CDATA[cuijie]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Docker学习笔记-构建环境]]></title>
    <link href="http://tech.cuijie.me/2016/01/18/Docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9E%84%E5%BB%BA%E7%8E%AF%E5%A2%83/"/>
    <id>http://tech.cuijie.me/2016/01/18/Docker学习笔记-构建环境/</id>
    <published>2016-01-18T15:32:32.000Z</published>
    <updated>2016-01-18T15:39:42.599Z</updated>
    <content type="html"><![CDATA[<p>最近这半个月在看Docker，还申请了一个订阅号，不过感觉自己就是在瞎搞。</p>
<p>之前因为网速的原因，学习的过程特别痛苦，尤其是构建镜像时，基本都等半天，然后还不成功。</p>
<p>然后今天找到了一个新方法：</p>
<p>就是在github上创建Dockerfile文件，然后在daocloud上生成镜像，最后下载到本地运行，这样很快，而且代码可以保存在github上，一举多得，哈哈</p>
<p>而且DaoCloud有镜像加速功能，下载很快，这是它的官网：<a href="https://www.daocloud.io/。" target="_blank" rel="external">https://www.daocloud.io/。</a></p>
<p>CentOS 6安装镜像加速</p>
<blockquote>
<p>sudo sed -i “s|other_args=\”|other_args=\”–registry-mirror=<a href="http://4f0cef54.m.daocloud.io" target="_blank" rel="external">http://4f0cef54.m.daocloud.io</a> |g” /etc/sysconfig/docker<br>sudo sed -i “s|OPTIONS=’|OPTIONS=’–registry-mirror=<a href="http://4f0cef54.m.daocloud.io" target="_blank" rel="external">http://4f0cef54.m.daocloud.io</a> |g” /etc/sysconfig/docker<br>sudo service docker restart</p>
</blockquote>
<p>该脚本可以将–registry-mirror加入到你的Docker配置文件/etc/sysconfig/docker中。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近这半个月在看Docker，还申请了一个订阅号，不过感觉自己就是在瞎搞。</p>
<p>之前因为网速的原因，学习的过程特别痛苦，尤其是构建镜像时，基本都等半天，然后还不成功。</p>
<p>然后今天找到了一个新方法：</p>
<p>就是在github上创建Dockerfi]]>
    </summary>
    
      <category term="认识Docker" scheme="http://tech.cuijie.me/tags/%E8%AE%A4%E8%AF%86Docker/"/>
    
      <category term="Docker" scheme="http://tech.cuijie.me/categories/Docker/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015.11总结]]></title>
    <link href="http://tech.cuijie.me/2015/12/07/2015-11%E6%80%BB%E7%BB%93/"/>
    <id>http://tech.cuijie.me/2015/12/07/2015-11总结/</id>
    <published>2015-12-07T15:19:16.000Z</published>
    <updated>2015-12-07T15:38:42.928Z</updated>
    <content type="html"><![CDATA[<p>工作之后，时间过得真快，今天刚买好火车票，马上又要回家了。然后上个月又没干成什么，就这样一个月又过去了。</p>
<p>这个月本来说要学IOS开发的，不过当我看懂OC的代码后，就没怎么看了，然后就一直在写React Native的项目，现在项目基本完工了。其他的也没学什么。</p>
<p>我就发现自己做事总是浅尝辄止，什么都想学，但一般学了一点，刚入门就又去学别的了，这样什么都没学会。</p>
<p>这个月最大的收获就是看了《数学之美》，感觉特别好，如果在大学时看过这个书就好了，然后推荐给了几个师弟师妹。全书大概看了一遍，好多公式都略过了，以前学的那些随机过程、矩阵计算都不记得了，不过终于知道了以前学的那些数学有什么用，以后也要继续学习数学。</p>
<p>还有两个月就要回家了，这段时间就是想系统的学一下设计模式，上个月也说了。有时间就总结一下React Native开发中遇到的问题。</p>
<p>这个月双十一时买了三本新书：《数学之美》、《Javascript函数式编程》、《React Native开发》，最后一本书有点水，函数式编程还没怎么看。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>工作之后，时间过得真快，今天刚买好火车票，马上又要回家了。然后上个月又没干成什么，就这样一个月又过去了。</p>
<p>这个月本来说要学IOS开发的，不过当我看懂OC的代码后，就没怎么看了，然后就一直在写React Native的项目，现在项目基本完工了。其他的也没学什么。]]>
    </summary>
    
      <category term="总结" scheme="http://tech.cuijie.me/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="生活" scheme="http://tech.cuijie.me/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015.10总结]]></title>
    <link href="http://tech.cuijie.me/2015/11/02/2015-10%E6%80%BB%E7%BB%93/"/>
    <id>http://tech.cuijie.me/2015/11/02/2015-10总结/</id>
    <published>2015-11-01T16:21:24.000Z</published>
    <updated>2015-11-01T16:48:56.975Z</updated>
    <content type="html"><![CDATA[<p>10月份结束了，本来说好的写博客，也只坚持了最初的几天，后来慢慢的荒废了。这个月也不是没学东西，但是总是感觉自己学过的，都有人写过了，而且写的很好。而自己一方面理解的不深，另外也没及时整理，过了那段时间，就没心思再去整理了。</p>
<p>这个月主要在学IOS开发，从头开始，熟悉了OSX系统，也熟悉了Xcode开发环境，然后按照IOS编程那本书学习。总的来说，感觉IOS开发也没有多少新知识，只是最开始学的时候被OC的语法搞得有点头晕，后来熟悉了之后，有点觉得真像他们说的，OC的语法很优雅，尤其是传递消息的时候，有点朗朗上口的感觉。</p>
<p>其实IOS开发感觉跟之前接触过的WinForm有点类似，都是事件驱动的，而且都有一些现成的组件可用，很多概念也都是之前学C/C#时就接触过的，可能叫法不同而已。这段时间主要就是在熟悉各个组件的用法，可能是我刚接触，理解还不深吧。</p>
<p>上个月最大的收获就是IOS开发了，终于接触到移动端的原生开发了。然后就是ASP.NET的理解了，之前的学习都是停留在一个个的知识点上，现在大概能全面的看一些问题了。之前看过的很多书，现在重看感觉有点不一样了。</p>
<p>这个月的打算：</p>
<ul>
<li>IOS编程看完，里面的练习都搞一遍，大概11.15完成。</li>
<li>React Native开发</li>
<li>想深入学习下设计模式，之前的学习效果一般般，现在好像又什么都不记得了，而且手上有好几本设计模式的书了：设计模式、敏捷软件开发、ASP.NET设计模式、大话设计模式</li>
<li>C#语法，有很多还是不熟悉</li>
</ul>
<p>我做的计划大都完不成，不过还是要做。</p>
<p>这个月买了两本新书：《IOS编程》、《启示录》<br>看了14部电影：港囧、异形大战铁血战士1、夏洛特烦恼、九层妖塔、神奇四侠2015版、魔戒1-3、霍比特人1-3、僵尸世界大战、非我、肖申克的救赎</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>10月份结束了，本来说好的写博客，也只坚持了最初的几天，后来慢慢的荒废了。这个月也不是没学东西，但是总是感觉自己学过的，都有人写过了，而且写的很好。而自己一方面理解的不深，另外也没及时整理，过了那段时间，就没心思再去整理了。</p>
<p>这个月主要在学IOS开发，从头开始]]>
    </summary>
    
      <category term="总结" scheme="http://tech.cuijie.me/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="生活" scheme="http://tech.cuijie.me/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[React Native开发初步]]></title>
    <link href="http://tech.cuijie.me/2015/10/20/React-Native%E5%BC%80%E5%8F%91%E5%88%9D%E6%AD%A5/"/>
    <id>http://tech.cuijie.me/2015/10/20/React-Native开发初步/</id>
    <published>2015-10-19T16:24:11.000Z</published>
    <updated>2015-10-19T17:00:35.691Z</updated>
    <content type="html"><![CDATA[<p>今天开始学习React Native开发，记录下自己的学习过程。</p>
<h3 id="OSX">OSX</h3><p>目前React Native需要在苹果系统上开发，我用的是同事帮忙安装的黑苹果，我自己也在虚拟机上安装过，但是有些卡。</p>
<p>之前没用过苹果，下面这篇文字介绍了OSX的基本操作：<a href="http://www.cnblogs.com/chijianqiang/archive/2011/08/03/2126593.html" target="_blank" rel="external">开始使用Mac OS X</a>，介绍的还不错。</p>
<h3 id="安装开发工具">安装开发工具</h3><p>首先需要安装开发环境，官网上有<a href="http://facebook.github.io/react-native/docs/getting-started.html#content" target="_blank" rel="external">具体介绍</a>，我也是按照这个来的。我只安装了下面三个：</p>
<ul>
<li>xcode</li>
<li>homebrew</li>
<li>nodejs</li>
</ul>
<h3 id="VPN_&amp;_SVN">VPN &amp; SVN</h3><p>VPN：直接设置连接就可以了<br>SVN：OSX本身自带命名行的SVN</p>
<p>svn checkout ‘path’</p>
<h3 id="创建项目">创建项目</h3><p>安装完基本工具后，开始开发React Native项目：</p>
<ul>
<li><code>npm install -g react-native-cli</code>： 安装命令行工具react-native，只需运行一次</li>
<li><code>react-native init ProjectName</code>： 初始化一个新项目模版，这个命令会获取所有必须的依赖，里面同时包括ios和android项目。这一步会花很多时间，要下载很多东西，我用了大概40分钟吧。</li>
</ul>
<p>接下来就可以通过xcode运行项目了，可以看到一个简单的界面。</p>
<h3 id="其他">其他</h3><p>一篇介绍<a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="external">flex</a>的文章。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天开始学习React Native开发，记录下自己的学习过程。</p>
<h3 id="OSX">OSX</h3><p>目前React Native需要在苹果系统上开发，我用的是同事帮忙安装的黑苹果，我自己也在虚拟机上安装过，但是有些卡。</p>
<p>之前没用过苹果，下]]>
    </summary>
    
      <category term="React Native" scheme="http://tech.cuijie.me/tags/React-Native/"/>
    
      <category term="React Native" scheme="http://tech.cuijie.me/categories/React-Native/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git基本命令]]></title>
    <link href="http://tech.cuijie.me/2015/10/13/Git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <id>http://tech.cuijie.me/2015/10/13/Git基本命令/</id>
    <published>2015-10-12T16:36:30.000Z</published>
    <updated>2015-10-13T13:43:39.375Z</updated>
    <content type="html"><![CDATA[<p>今天看了一个介绍Git使用的<a href="http://www.infoq.com/cn/git-adventures" target="_blank" rel="external">教程</a>，了解了Git的基本操作，下面是记录的一些常用命令。</p>
<blockquote>
<p>Git是一个开源的分布式版本控件系统，它的每个工作目录都包含一个完整的仓库，它可以支持离线工作，先把工作提交到本地仓库后再提交上远程的服务器上的仓库里。</p>
</blockquote>
<p><strong>工作目录–暂存区–本地仓库</strong></p>
<p>git-init：在当前的目录下创建一个新的空的本地仓库<br>git-log：查看当前仓库的历史日志<br>git-status：查看当前仓库的状态<br>git-add：把文件加到暂存区<br>git-commit：提交到本地库<br>git diff：查看仓库里未暂存内容和仓库已提交内容的差异<br>git-clone：clone一个远程项目<br>git cat-file -p 2bb9f0：查看文件内容<br>git ls-files –stage：查看缓存区文件<br>git-checkout - Checkout a branch or paths to the working tree 就是取消了工作目录里的修改<br>git branch test 创建分支<br>git checkout test  切换分支<br>git merge test  合并分支</p>
<blockquote>
<p>Git 与大部分你熟悉的版本控制系统，如Subversion、CVS、Perforce 之间的差别是很大的。传统系统使用的是： “增量文件系统” （Delta Storage systems），它们存储是每次提交之间的差异。而Git正好与之相反，它是保存的是每次提交的完整内容（snapshot）；它会在提交前根据要提交 的内容求SHA1哈希串值作为对象名，看仓库内是否有相同的对象，如果没有就将在“.git/objects”目录创建对应的对象，如果有就会重用已有的 对象，以节约空间。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天看了一个介绍Git使用的<a href="http://www.infoq.com/cn/git-adventures" target="_blank" rel="external">教程</a>，了解了Git的基本操作，下面是记录的一些常用命令。</p>
<block]]>
    </summary>
    
      <category term="Git" scheme="http://tech.cuijie.me/tags/Git/"/>
    
      <category term="版本控制" scheme="http://tech.cuijie.me/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
      <category term="开发工具" scheme="http://tech.cuijie.me/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[个人博客搭建]]></title>
    <link href="http://tech.cuijie.me/2015/10/10/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>http://tech.cuijie.me/2015/10/10/个人博客搭建/</id>
    <published>2015-10-10T15:28:34.000Z</published>
    <updated>2015-10-10T16:11:19.371Z</updated>
    <content type="html"><![CDATA[<p>本文主要介绍自己在搭建博客中用到的工具。</p>
<h3 id="服务器">服务器</h3><p>博客部署在GitHub上，它提供了<a href="https://pages.github.com/" target="_blank" rel="external">Pages</a>功能，很不错，只要有一个GitHub账号就可以了。</p>
<h3 id="域名">域名</h3><p>在万网注册的，其实用了GitHub <a href="https://pages.github.com/" target="_blank" rel="external">Pages</a>，域名不用也可以。如果用的话，只要在博客根目录放一个CNAME文件就行了。</p>
<h3 id="博客框架">博客框架</h3><p>使用了<a href="http://www.hexo.io" target="_blank" rel="external">Hexo</a>静态博客框架，很方便，它构建了node上，好像是一个台湾的同学写的。<br>博客主题用的<a href="https://github.com/A-limon/pacman" target="_blank" rel="external">pacman</a>，不过有些地方需要根据自己的需要修改。</p>
<h3 id="图片存储">图片存储</h3><p>使用<a href="http://www.qiniu.com/" target="_blank" rel="external">七牛</a>存储图片，注册一个免费账号就足够用了。</p>
<h3 id="搜索">搜索</h3><p>使用了<a href="https://swiftype.com" target="_blank" rel="external">Swiftype</a>做站内搜索，很容易使用，网上教程也很容易找到。</p>
<h3 id="404页面">404页面</h3><p>用的是腾讯的<a href="http://www.qq.com/404/" target="_blank" rel="external">公益404</a></p>
<h3 id="评论">评论</h3><p><a href="http://duoshuo.com/" target="_blank" rel="external">多说</a></p>
<h3 id="统计">统计</h3><p><a href="http://tongji.baidu.com" target="_blank" rel="external">百度统计</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文主要介绍自己在搭建博客中用到的工具。</p>
<h3 id="服务器">服务器</h3><p>博客部署在GitHub上，它提供了<a href="https://pages.github.com/" target="_blank" rel="external">Page]]>
    </summary>
    
      <category term="blog" scheme="http://tech.cuijie.me/tags/blog/"/>
    
      <category term="hexo" scheme="http://tech.cuijie.me/tags/hexo/"/>
    
      <category term="blog" scheme="http://tech.cuijie.me/categories/blog/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Pacman主题修改]]></title>
    <link href="http://tech.cuijie.me/2015/10/09/Pacman%E4%B8%BB%E9%A2%98%E4%BF%AE%E6%94%B9/"/>
    <id>http://tech.cuijie.me/2015/10/09/Pacman主题修改/</id>
    <published>2015-10-08T16:10:55.000Z</published>
    <updated>2015-10-10T16:55:02.429Z</updated>
    <content type="html"><![CDATA[<p>昨天刚弄好博客，但是模版还有一些问题，今天修改了一下，有些都是别人分享过的，直接拿过来了。</p>
<p>下面这两个是有问题的，在<a href="http://yangjian.me/pacman/hello/introducing-pacman-theme/" target="_blank" rel="external">作者网站</a>的主题介绍的评论里看到了解决方法。</p>
<h3 id="头像路径">头像路径</h3><p>要把头像弄出来，需要在路径上加上/。因为查看页面源码是用css的background实现的，默认代码里的<code>img/author.jpg</code>被整合查看图片url是<code>css/img/author.jpg</code>，所以加上/就好了。<br>修改方法如下：<br>把<code>author_img: img/author.jpg</code>改成<code>author_img: /img/author.jpg</code></p>
<h3 id="代码高亮设置_还没试过">代码高亮设置 还没试过</h3><p><code>source/css/_base/variable.styl</code>中找到<code>highlight = hexo-config(&quot;highlight.enable&quot;)</code>注释掉就好了</p>
<h3 id="RSS">RSS</h3><p>需要安装<a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="external">插件</a>：<code>npm install hexo-generator-feed</code><br>编辑<code>themes/light/_config.yml</code>，修改<code>rss: &quot;/atom.xml&quot;</code></p>
<h3 id="评论">评论</h3><p>原来的多说评论，代码版本有点旧，更新成了新版的</p>
<h3 id="站内搜索">站内搜索</h3><p>站内搜索改用<a href="https://swiftype.com" target="_blank" rel="external">swiftype</a></p>
<h3 id="网站统计">网站统计</h3><p>添加<a href="http://tongji.baidu.com/" target="_blank" rel="external">百度统计</a></p>
<h3 id="其他">其他</h3><p>分享里去掉了facebook和twitter</p>
<p>另外，所有js代码都是在after_footer文件里加载的</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>昨天刚弄好博客，但是模版还有一些问题，今天修改了一下，有些都是别人分享过的，直接拿过来了。</p>
<p>下面这两个是有问题的，在<a href="http://yangjian.me/pacman/hello/introducing-pacman-theme/" targ]]>
    </summary>
    
      <category term="blog" scheme="http://tech.cuijie.me/tags/blog/"/>
    
      <category term="hexo" scheme="http://tech.cuijie.me/tags/hexo/"/>
    
      <category term="blog" scheme="http://tech.cuijie.me/categories/blog/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ASP.NET MVC学习]]></title>
    <link href="http://tech.cuijie.me/2015/10/08/ASP-NET-MVC%E5%AD%A6%E4%B9%A0/"/>
    <id>http://tech.cuijie.me/2015/10/08/ASP-NET-MVC学习/</id>
    <published>2015-10-07T16:09:30.000Z</published>
    <updated>2015-10-12T16:49:52.621Z</updated>
    <content type="html"><![CDATA[<p>十一假期主要在看MVC高级编程，感觉对MVC的认识更深入了。</p>
<p>ASP.NET MVC就是把MVC模式应用在ASP.NET框架之上的一个Web框架，主要用来创建网站应用。</p>
<p>根据我的认识，这是一个服务器端MVC，在服务器端渲染好页面后，把整个页面返回给前端展示。而且它的模版、视图、控制器都是密切合作的，而且看了很多章之后，感觉即使不用js也可以创建一个网站了。</p>
<p>它是一个完整的Web框架，提供了很多功能，而且基本都是可扩展的，而我之前很多都没用过，比如HTML辅助方法、数据注解、验证、授权等。而且有很多现成的类库可以直接拿来用。</p>
<p>最近做的一些项目，前端代码都是运行在客户端，后台主要用来提供程序运行的数据，跟上面的MVC是完全不同的模式。所以我们后台都是用了Web API。当然也是可以用MVC的，但是Web API本来就是针对Web服务的，应该做了一些针对性的优化，我还不太了解。</p>
<p>还是要不断完善自己的知识体系。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>十一假期主要在看MVC高级编程，感觉对MVC的认识更深入了。</p>
<p>ASP.NET MVC就是把MVC模式应用在ASP.NET框架之上的一个Web框架，主要用来创建网站应用。</p>
<p>根据我的认识，这是一个服务器端MVC，在服务器端渲染好页面后，把整个页面返回]]>
    </summary>
    
      <category term="ASP.NET MVC" scheme="http://tech.cuijie.me/categories/ASP-NET-MVC/"/>
    
  </entry>
  
</feed>
